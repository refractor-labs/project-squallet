import Head from 'next/head'
import Sign from '@/components/sign'
import { ReactElement, useEffect } from 'react'
import DashboardLayout from '@/components/layouts/Dashboard'
import PKP from '@/components/pkp'
import LitAction from '@/components/lit-action'
import Fund from '@/components/fund'
import { WalletConnectLayout } from '@/walletconnect/components/layouts/WalletConnectLayout'
import WalletConnectPage from '../walletconnect'
import { usePkpAddress, usePublicKey, usePkpId } from '@/utils/localstorage'
import { useRouter } from 'next/router'
import { LitContracts } from '@lit-protocol/contracts-sdk'
import { ethers } from 'ethers'

export default function Home() {
  const [publicKey, setPublicKey] = usePublicKey()
  const [address, setAddress] = usePkpAddress()
  const [pkpId, setPkpId] = usePkpId()
  const router = useRouter()

  useEffect(() => {
    const pkp = router.query.pkp
    if (!pkp) {
      return
    }
    ;(async () => {
      const litContracts = new LitContracts()
      await litContracts.connect()
      const publicKey = await litContracts.pkpNftContract.read.getPubkey(pkp)
      setPublicKey(publicKey)
      setAddress(ethers.utils.computeAddress(publicKey))
      setPkpId(pkp)
    })()
  }, [router.query])

  if (!publicKey || !address || !pkpId) {
    return null
  }

  return (
    <DashboardLayout title={address}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="grid lg:grid-cols-5 gap-4">
          <div className="lg:col-span-2 card bg-base-100 w-full max-w-full shadow-xl border break-all divide-y gap-6">
            {publicKey && (
              <div className="card-body">
                <Fund />
              </div>
            )}
            {publicKey && (
              <div className="card-body">
                <LitAction onUpload={() => {}} />
              </div>
            )}
          </div>
          {publicKey && (
            <div className="lg:col-span-3 card bg-base-100 w-full max-w-full shadow-xl border break-all">
              <div className="card-body">
                <WalletConnectLayout>
                  <WalletConnectPage />
                </WalletConnectLayout>
              </div>
            </div>
          )}
        </div>
      </main>
    </DashboardLayout>
  )
}
